<start_of_turn>model
```python
def is_stable(board, n):
    rook_pos = {}
    for i in range(1, n + 1):
        for j in range(1, n + 1):
            if board[i][j] == 'R':
                rook_pos[(i, j)] = True

    for i in range(1, n + 1):
        for j in range(1, n + 1):
          for k in range(1, n + 1):
             if ( (board[i - 1][k] == 'R') and
               (board[j][k] == 'R')):
                return False
             if ( (board[i][k - 1] == 'R') and
               (board[j][k] == 'R')):
                return False

    return True

# Get Input
t = int(input())

for _ in range(t):
  n, k = map(int, input().split())
  board = [[' ' for _ in range(n)] for _ in range(n)]
  for i in range(n):
    for j in range(n):
       board[i][j] = ' '
  if is_stable(board, n) == True:
      print('R', end='')
  if is_stable(board, n)  != True:
      print('-1')

```
<end_of_turn>
