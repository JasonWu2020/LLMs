<start_of_turn>model
```python
def solve(n):
  for i in range(1, n):
    if (n & (n - 1)) & (n - 2) & (n - 3) & ... & (i):
      return i
  return n

t = int(input())
for _ in range(t):
  n = int(input())
  print(solve(n))
```<end_of_turn>
