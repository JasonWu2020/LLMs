<start_of_turn>model
```python
def find_subsequence(a, b):
  n = len(a)
  m = len(b)
  c = []
  i1 = 0
  i2 = 0
  while i1 < n and i2 < m:
    if a[i1] < b[i2]:
      i1 += 1
    elif a[i1] > b[i2]:
      i2 += 1
    else:
      c.append(a[i1])
      i1 += 1
      i2 += 1
  return c

def main():
  t = int(input())
  for _ in range(t):
    n, m = map(int, input().split())
    a = list(map(int, input().split()))
    b = list(map(int, input().split()))
    if len(find_subsequence(a, b)) == 0:
      print("NO")
    else:
      print("YES", len(find_subsequence(a, b)), *find_subsequence(a, b))

if __name__ == "__main__":
  main()
``` 
<end_of_turn>
