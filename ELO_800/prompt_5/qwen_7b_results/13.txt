```python
def find_min_length(password):
    """
    Finds the minimum length of a password after applying a series of operations,
    where each operation consists of replacing two adjacent unequal numbers with their sum.
    
    Parameters:
    password (list): A list of integers representing the password.
    
    Returns:
    int: The minimum possible length of the password after performing operations.
    """
    unique_elements = set(password)
    return 1 if len(unique_elements) == 1 else 2

if __name__ == "__main__":
    import sys
    input = sys.stdin.readline

    # Reading the number of test cases
    t = int(input())
    results = []

    for _ in range(t):
        n = int(input())
        password = list(map(int, input().split()))
        results.append(find_min_length(password))

    # Printing the results for each test case
    for result in results:
        print(result)
```

This Python code snippet solves the problem by defining a function `find_min_length` that calculates the minimum possible length of a password array after performing operations based on the given conditions. It reads the input for each test case, processes it using the defined function, and prints the results for each case.
