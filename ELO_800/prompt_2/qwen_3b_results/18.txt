```python
import sys

def find_common_subsequence():
    input = sys.stdin.read
    data = input().split()
    t = int(data[0])
    for _ in range(t):
        n, m = map(int, data[1:3])
        a = list(map(int, data[3:3 + n]))
        b = list(map(int, data[3 + n:3 + n + m]))
        
        # Find common subsequences using dynamic programming
        dp = [[False] * (m + 1) for _ in range(n + 1)]
        longest_common_length = 0
        ending_index_a = -1
        
        for i in range(1, n + 1):
            for j in range(1, m + 1):
                if a[i - 1] == b[j - 1]:
                    dp[i][j] = True
                    if i > longest_common_length:
                        longest_common_length = i
                        ending_index_a = i - 1
        
        # If we found a common subsequence, reconstruct it
        if longest_common_length > 0:
            result = [0] * longest_common_length
            for i in range(longest_common_length - 1, -1, -1):
                if dp[ending_index_a - i + 1][m] and a[ending_index_a - i] == b[m - 1]:
                    result[i] = a[ending_index_a - i]
                    m -= 1
                    ending_index_a -= 1
            
            print("YES")
            print(len(result), ' '.join(map(str, result)))
        else:
            print("NO")

if __name__ == "__main__":
    find_common_subsequence()
```
