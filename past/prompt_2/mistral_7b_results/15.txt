[/INST] ```python
import math
import sys
import heapq

n = int(sys.stdin.readline())
edges = [[] for _ in range(n)]
points = []
parent = [i for i in range(n, 0, -1)]
visited = [False] * n

for _ in range(n-1):
    u, v = map(int, sys.stdin.readline().strip().split())
    edges[u-1].append(v-1)
    edges[v-1].append(u-1)

for _ in range(n):
    x, y = map(float, sys.stdin.readline().strip().split())
    points.append((x, y))

heap = [(0, 0) for _ in range(n)]
heapq.heapify(heap)

for i in range(n):
    d = float("inf")
    u = i
    while visited[u]:
        p = parent[u]
        for j in edges[p]:
            if not visited[j]:
                x, y = points[j]
                dx, dy = points[u] - points[i]
                dist = math.sqrt((dx-x)**2 + (dy-y)**2)
                if dist < d:
                    d = dist
                    u = j
        visited[u] = True
    parent[i] = i
    heap[i][0] = d
    heapq.heappop(heap)
    print(i+1)
```</s>
