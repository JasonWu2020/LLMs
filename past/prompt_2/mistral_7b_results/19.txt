[/INST] ```python
import sys
import collections

def dfs(graph, visited, order, leaf_order, root, result):
    visited[root] = True
    for neighbor in graph[root]:
        if not visited[neighbor]:
            dfs(graph, visited, order, leaf_order, neighbor, result)
            result.append(neighbor)
            result.append(neighbor)

    if leaf_order and leaf_order[0] == root:
        del leaf_order[0]
        result.append(root)

n = int(sys.stdin.readline())
graph = [[] for _ in range(n + 1)]
edges = [list(map(int, sys.stdin.readline().strip().split())) for _ in range(n - 1)]

for edge in edges:
    graph[edge[0]].append(edge[1])
    graph[edge[1]].append(edge[0])

k = int(sys.stdin.readline())
leaf_order = list(map(int, sys.stdin.readline().strip().split()))

visited = [False] * (n + 1)
result = []
dfs(graph, visited, result, leaf_order, 1, result)

if not leaf_order:
    print(-1)
else:
    for leaf in leaf_order:
        result.remove(leaf)

    for i in result:
        print(i)
```</s>
