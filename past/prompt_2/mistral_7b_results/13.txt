[/INST] ```python
import sys
input = sys.stdin.readline().strip()
n = len(input)
dp = [[0] * (n + 1) for _ in range(n + 1)]
for i in range(n + 1):
    dp[i][i] = input[i - 1:i]
for l in range(2, n + 1):
    for i in range(n - l + 1):
        j = i + l
        dp[i][j] = dp[i + 1][j]
        if len(dp[i][j - 1]) < len(dp[i + 1][j]):
            dp[i][j] = dp[i + 1][j]
        if len(dp[i][j - 1]) > len(dp[i][j]) and len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(dp[i][i:i + len(
