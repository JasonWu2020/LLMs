```python
import sys
input = sys.stdin.readline

def get_g(k, g0, x, y, z):
    ret = g0
    for _ in range(k):
        ret = (ret * x + y) % z
    return ret

def lowbit(x):
    return x & -x

def update(i, n, t, val):
    while i <= n:
        t[i] += val
        i += lowbit(i)

def query(i, n, t):
    ret = 0
    while i > 0:
        ret += t[i]
        i -= lowbit(i)
    return ret

def solve():
    n, m, a, b = map(int, input().split())
    g0, x, y, z = map(int, input().split())
    t = [0] * (m + 1)
    g = [0] * (m + 1)
    g[0] = g0
    for i in range(1, m + 1):
        g[i] = get_g(i - 1, g0, x, y, z)

    ans = 0
    for i in range(1, n + 1):
        stack = []
        for j in range(1, m + 1):
            while stack and g[stack[-1]] >= g[j]:
                update(stack.pop(), m, t, -1)
            update(j, m, t, 1)
            stack.append(j)

        for j in range(m - b + 1):
            ans += query(j, m, t) * i
            update(j + 1, m, t, -1)

    print(ans)

solve()
```
