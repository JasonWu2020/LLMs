```python
def find_start(maze):
    for i, row in enumerate(maze):
        for j, cell in enumerate(row):
            if cell == 'S':
                return i, j
    return None, None

def get_adjacent_cells(x, y, n, m):
    adjacent = []
    for dx, dy in [(-1, 0), (1, 0), (0, -1), (0, 1)]:
        nx, ny = x + dx, y + dy
        if 0 <= nx < n and 0 <= ny < m and maze[nx][ny] != '#':
            adjacent.append((nx, ny))
    return adjacent

def can_walk_infinite(n, m, maze):
    start_x, start_y = find_start(maze)
    visited = set([(start_x, start_y)])
    
    def dfs(x, y):
        if (x, y) in visited:
            return False
        visited.add((x, y))
        for nx, ny in get_adjacent_cells(x, y, n, m):
            if dfs(nx, ny):
                return True
        return False
    
    return dfs(start_x, start_y)

# Reading input from stdin
n, m = map(int, input().split())
maze = [input() for _ in range(n)]

# Printing output to stdout
print("Yes" if can_walk_infinite(n, m, maze) else "No")
```
