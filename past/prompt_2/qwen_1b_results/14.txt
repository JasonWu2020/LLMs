```python3
import sys

def main():
    n, m = map(int, input().split())
    
    grid = []
    for _ in range(n):
        row = list(input())
        grid.append(row)

    start_x, start_y = -1, -1
    for i in range(n):
        for j in range(m):
            if grid[i][j] == 'S':
                start_x, start_y = i, j
                break
        if start_x != -1:
            break
    
    directions = [(0, 1), (-1, 0), (0, -1), (1, 0)]
    visited = [[False] * m for _ in range(n)]

    def dfs(x, y):
        if x < 0 or x >= n or y < 0 or y >= m or grid[x][y] == '#' or visited[x][y]:
            return False
        
        visited[x][y] = True
        for dx, dy in directions:
            nx, ny = x + dx, y + dy
            if dfs(nx, ny):
                return True
        return False

    def find_path(start_x, start_y):
        stack = [(start_x, start_y)]
        while stack:
            x, y = stack.pop()
            if dfs(x, y):
                return True
            for dx, dy in directions:
                nx, ny = x + dx, y + dy
                if 0 <= nx < n and 0 <= ny < m and not visited[nx][ny]:
                    visited[nx][ny] = True
                    stack.append((nx, ny))
        
        return False

    if find_path(start_x, start_y):
        print("Yes")
    else:
        print("No")

if __name__ == "__main__":
    main()
```
