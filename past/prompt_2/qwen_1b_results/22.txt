```python3
from collections import Counter

def min_unique_chars(s, k):
    char_count = Counter(s)
    
    for i in range(len(s)):
        for j in range(i + 1, len(s) + 1):
            substring = s[i:j]
            
            # Remove duplicate characters
            unique_chars = ''.join(set(substring))
            
            # Check if we can remove k characters while keeping the count <= k
            if len(unique_chars) - sum(char_count[char] for char in unique_chars) > k:
                continue
            
            return len(unique_chars), substring
    
    return 0, ""

# Read input
n = int(input())
s = input()
k = int(input())

result = min_unique_chars(s, k)

print(result[0])
print(result[1])
```

This Python script implements the logic described in the problem statement. It reads the string `s`, its length `n`, and the integer `k` from standard input, then calls the `min_unique_chars` function to determine the minimum number of unique characters remaining and the resulting substring. Finally, it prints these values according to the specified format.
