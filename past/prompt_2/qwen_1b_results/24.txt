```python3
import sys

def can_get_B(A):
    # Check if A is already B
    if tuple(A) == tuple((0, 0)):
        return 'YES'
    
    x1, y1 = A[0], A[1]
    x2, y2 = A[2], A[3]

    # Rotate A by 90 degrees counterclockwise
    rotated_A = (-y1 + x1, x1 - y2)

    # Add C to rotated_A
    result = list(rotated_A)
    for i in range(4):
        c_x, c_y = map(int, input().split())
        result[i] += c_x
    
    # Check if result is equal to B
    if tuple(result) == tuple(B):
        return 'YES'
    else:
        return 'NO'

# Read input
input()
A = tuple(map(int, input().split()))
input()
B = tuple(map(int, input().split()))
input()

# Print output
print(can_get_B(A))
```
This Python script defines a function `can_get_B` that takes two vectors `A` and `B`, performs the required transformations, and checks whether `B` can be obtained from `A`. It then prints "YES" if `B` can be obtained, otherwise "NO". The script reads the inputs and outputs accordingly based on the specified requirements.
