<start_of_turn>model
```python
def mod_inverse(a, m): 
  for i in range(1, m): 
    if (a * i) % m == 1:
      return i
  return -1

def main():
  n, m = map(int, input().split())
  buses = []
  for _ in range(m):
    s, t = map(int, input().split())
    buses.append((s, t))

  mod = 10**9 + 7
  dp = [[0 for _ in range(n + 1)] for _ in range(n + 1)]
  
  for i in range(n + 1):
      dp[i][0] = 1

  for i in range(1, n + 1):
      for j in range(1, n + 1):
          if dp[i - 1][j - 1] > 0:
              dp[i][j] = (dp[i][j - 1] + dp[i - 1][j]) % mod


  count = dp[n][n]
  result = count % mod
  print(result)

if __name__ == "__main__":
  main()
``` 


<end_of_turn>
