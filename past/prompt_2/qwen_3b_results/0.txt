```python
def longest_good_subsequence(n, k, s):
    alphabet = set(s)
    if len(alphabet) > k:
        return 0

    freq = [0] * k
    for char in s:
        freq[ord(char) - ord('A')] += 1

    max_length = min(freq.count(freq[0]), n // k) * k
    return max_length

n, k = map(int, input().split())
s = input().strip()
print(longest_good_subsequence(n, k, s))
```
