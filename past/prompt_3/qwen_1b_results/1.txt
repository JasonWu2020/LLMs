Solution:

```python
import math
from typing import List

def gcd_sum(n: int) -> bool:
    """Check if it's possible to partition numbers 1 to n into two groups S1 and S2 
       such that gcd(sum(S1), sum(S2)) > 1."""
    
    # Initialize sums for both groups
    s1_sum = 0
    s2_sum = 0
    
    # Iterate through each number from 1 to n
    for i in range(1, n + 1):
        s1_sum += i
        
        # Check if we can divide the remaining numbers into two groups satisfying the condition
        if not gcd_sum_helper(s2_sum, s1_sum - i, i):
            return False
            
    return True

def gcd_sum_helper(s2_sum: int, s1_sum_minus_i: int, i: int) -> bool:
    """Helper function to check if gcd(sum(S1), sum(S2)) > 1 given current state"""
    
    # Base case: If s2_sum becomes greater than s1_sum minus i, we cannot further split
    if s2_sum > s1_sum_minus_i:
        return False
    
    # Recursive call to check if splitting is possible
    return (
        # Splitting if possible
        gcd_sum_helper(
            s2_sum * 2,
            s1_sum_minus_i + i,
            i // 2
        )
        or
        # Splitting if possible
        gcd_sum_helper(
            s2_sum * 2,
            s1_sum_minus_i + i,
            i // 2
        )  
    )

# Read input
n = int(input())

# Output result
if not gcd_sum(n):
    print("No")
else:
    print("Yes")
    print(f"{n} {n}")
    print(*range(1, n+1))
```

This Python program implements a solution based on dynamic programming combined with recursive backtracking. It tries to find a valid partition by recursively dividing the numbers into two groups until it either finds a valid partition or exhausts all possibilities. The `gcd_sum` function checks if such a partition exists by calling the helper function `gcd_sum_helper`. The helper function uses recursion to explore all possible splits while ensuring that the resulting sums satisfy the condition that their greatest common divisor is greater than 1. The main part reads the input, calls the necessary functions, and prints the required output accordingly.
