def gcd(a, b):
    while b:
        a, b = b, a % b
    return a

def find_partition(n):
    if n == 1:
        return "No"
    
    # Create two sets S1 and S2
    S1 = [1]
    S2 = list(range(2, n + 1))
    
    # Calculate the sum of S1 and S2
    sum_S1 = sum(S1)
    sum_S2 = sum(S2)
    
    # Check if gcd(sum(S1), sum(S2)) > 1
    if gcd(sum_S1, sum_S2) > 1:
        return "Yes\n" + str(len(S1)) + "\n" + ' '.join(map(str, S1)) + "\n" + str(len(S2)) + "\n" + ' '.join(map(str, S2))
    
    # If not, try swapping the elements between S1 and S2
    for i in range(1, n):
        for j in range(i + 1, n + 1):
            S1.append(j)
            S2.remove(j)
            sum_S1 += j
            sum_S2 -= j
            
            if gcd(sum_S1, sum_S2) > 1:
                return "Yes\n" + str(len(S1)) + "\n" + ' '.join(map(str, S1)) + "\n" + str(len(S2)) + "\n" + ' '.join(map(str, S2))
            
            S1.remove(j)
            S2.append(j)
            sum_S1 -= j
            sum_S2 += j
    
    return "No"

if __name__ == "__main__":
    n = int(input())
    print(find_partition(n))
