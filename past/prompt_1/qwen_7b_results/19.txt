```python
import sys

def solve(n, edges, leaves):
    adj_list = [[] for _ in range(n)]
    for u, v in edges:
        adj_list[u-1].append(v-1)
        adj_list[v-1].append(u-1)

    result = []
    stack = [(0, None)]  # node, parent
    while stack:
        current, parent = stack.pop()
        result.append(current+1)
        if current in leaves:
            for child in adj_list[current]:
                if child != parent:
                    stack.append((child, current))
            break
        else:
            for child in adj_list[current]:
                if child != parent:
                    stack.append((child, current))

    for i in range(len(result)-1):
        print(result[i], end=' ')
    print(result[0])

if __name__ == "__main__":
    n = int(sys.stdin.readline().strip())
    edges = [list(map(int, sys.stdin.readline().strip().split())) for _ in range(n-1)]
    k = int(sys.stdin.readline().strip())
    leaves = list(map(int, sys.stdin.readline().strip().split()))
    leaves.sort()

    solve(n, edges, leaves)
```
