```python
def find_route(n):
    graph = [[] for _ in range(10**5 + 1)]
    visited = [False] * (10**5 + 1)
    path = []

    for _ in range(n):
        u, v = map(int, input().split())
        graph[u].append(v)

    def dfs(node, prev):
        if len(path) == n:
            return True
        visited[node] = True
        for next_node in graph[node]:
            if not visited[next_node]:
                path.append(next_node)
                if dfs(next_node, node):
                    return True
                path.pop()
        visited[node] = False
        return False

    start = int(input())
    dfs(start, -1)

    # If the second-to-last stamp is the same as the starting point,
    # use the alternative route
    if path[-2] == start:
        for i in reversed(range(1, n)):
            path[i], path[i-1] = path[i-1], path[i]

    path.append(start)
    print(' '.join(map(str, path)))

if __name__ == "__main__":
    find_route(int(input()))
```
