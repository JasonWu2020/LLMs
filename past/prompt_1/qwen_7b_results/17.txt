```python
import math

def solve_car_race(l, d, v, g, r):
    """
    Calculate the minimum time for the car to get from point A to point B without breaking traffic rules.
    
    :param l: Distance between A and B (in meters)
    :param d: Distance from A to the traffic lights (in meters)
    :param v: Car's speed (in meters/second)
    :param g: Duration of green light (in seconds)
    :param r: Duration of red light (in seconds)
    :return: Minimum time needed to get from A to B
    """
    def time_to_pass(d, v, g, r):
        # If the car approaches traffic lights with green light on, it can move immediately
        # If approaches with red light on, it needs to wait for the next green light
        if d <= v*g:
            return d / v + g
        else:
            if (d - v*g) % (2*g + r) <= g:
                return (d - v*g) / v + 2*g
            else:
                return ((d - v*g) // (2*g + r) + 1) * (g + r) + d / v
    
    # Case 1: If traffic lights are passed during green light (instant pass)
    time1 = l / v + g + (d - v*g) / v + 2*g
    
    # Case 2: Traffic lights are passed after the green light turns red (waiting time)
    time2 = time_to_pass(d, v, g, r) + (l - d - v*g) / v
    
    # Choose the minimum time among both scenarios
    return min(time1, time2)

# Read input
l, d, v, g, r = map(int, input().split())

# Solve the problem
result_time = solve_car_race(l, d, v, g, r)

# Print the result
print(result_time)
```
