```python3
import sys

def find_beautiful_number(n, k, x):
    # Convert string representation of x into list of digits
    digits = [int(d) for d in str(x)]
    
    def has_k_consecutive_digits(digits, k):
        if len(digits) % k != 0:
            return False
        groups = []
        for i in range(0, len(digits), k):
            group = digits[i:i+k]
            if len(group) == k and all(digit == group[0] for digit in group):
                groups.append(group)
        return True
    
    # Find the minimum beautiful number y
    min_y = int(''.join(str(digit) for digit in digits))
    while not has_k_consecutive_digits(digits, k):
        for i in range(len(digits)):
            new_digit = (digits[i] + 1) % 10
            new_digits = digits[:]
            new_digits[i] = new_digit
            new_x = ''.join(map(str, new_digits))
            if int(new_x) > min_y:
                min_y = int(new_x)
                break
        else:
            continue
        break
    
    return min_y

# Read input
input()
n, k = map(int, input().split())
x = input()

# Print result
print(find_beautiful_number(n, k, x))
```
