```python
def min_cost_to_sort(s):
    n = len(s)
    prefix_sum = [0] * (n + 1)
    
    for i in range(n):
        prefix_sum[i + 1] = prefix_sum[i] + int(s[i])
        
    dp = [[float('inf')] * n for _ in range(2)]
    dp[0][0] = 0
    
    for i in range(1, n + 1):
        if i == 1:
            dp[0][i] = abs(prefix_sum[i] - prefix_sum[0]) // 2
            continue
        
        for j in range(i):
            if dp[1 - (i & 1)][j] != float('inf'):
                dp[(i & 1)][i - j - 1] = min(dp[(i & 1)][i - j - 1], dp[1 - (i & 1)][j] + abs(prefix_sum[i] - prefix_sum[j]))
                
    return dp[n & 1][0]

for _ in range(int(input())):
    s = input()
    print(min_cost_to_sort(s))
```
