<start_of_turn>model
```python
n = int(input())
edges = []
for _ in range(n - 1):
  u, v = map(int, input().split())
  edges.append((u, v))
points = []
for _ in range(n):
  x, y = map(int, input().split())
  points.append((x, y))
 
edges.sort()
visited = [False] * (n + 1)
tree = [[] for _ in range(n + 1)]
for u, v in edges:
  tree[u].append(v)
  tree[v].append(u)

def dfs(node, visited):
    visited[node] = True
    color = len(list(visited[1:]))
    for neighbor in tree[node]:
        if not visited[neighbor]:
            dfs(neighbor, visited)
            
dfs(1, [False for _ in range(n + 1)])
print(*[i for i in range(1, n + 1)]) 
```<end_of_turn>
