<start_of_turn>model
```python
n, m = map(int, input().split())
maze = []
for i in range(n):
  maze.append(list(input()))
start = None
for row in maze:
  for col in row:
    if col == 'S':
      start = (i, col)
break
dx = [-1, 1, 0, 0] 
dy = [0, 0, -1, 1]
queue = []
queue.append((start[0], start[1], 0))
visited = set()
while queue:
    x, y, dist = queue.pop(0)
    visited.add((x, y))
    if x < 0 or x >= n or y < 0 or y >= m or  maze[x][y] == '#' or (x,y) in visited:
      continue
    print(x, y, dist)
    if (x, y) == (n-1, m-1):
      print('YES') 
      break
    for i in range(4):
        nx, ny = x + dx[i], y + dy[i]
        if (nx, ny) not in visited and maze[nx][ny] == '.': 
            queue.append((nx, ny, dist + 1))
            visited.add((nx, ny)) 
            
print('NO') 
```<end_of_turn>
