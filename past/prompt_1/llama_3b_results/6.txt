```python
import sys
from collections import deque

def solve(n, k, a):
    s = sum(a)
    min_val = min(a)
    dq = deque()
    for i, v in enumerate(a):
        dq.append((v, i))
    dq.append((min_val, n))
    dq.appendleft((min_val, 0))
    dq.appendleft((min_val, -1))
    dq.appendleft((min_val, -2))
    dq.appendleft((min_val, -3))
    dq.appendleft((min_val, -4))
    dq.appendleft((min_val, -5))
    dq.appendleft((min_val, -6))
    dq.appendleft((min_val, -7))
    dq.appendleft((min_val, -8))
    dq.appendleft((min_val, -9))
    dq.appendleft((min_val, -10))
    dq.appendleft((min_val, -11))
    dq.appendleft((min_val, -12))
    dq.appendleft((min_val, -13))
    dq.appendleft((min_val, -14))
    dq.appendleft((min_val, -15))
    dq.appendleft((min_val, -16))
    dq.appendleft((min_val, -17))
    dq.appendleft((min_val, -18))
    dq.appendleft((min_val, -19))
    dq.appendleft((min_val, -20))
    dq.appendleft((min_val, -21))
    dq.appendleft((min_val, -22))
    dq.appendleft((min_val, -23))
    dq.appendleft((min_val, -24))
    dq.appendleft((min_val, -25))
    dq.appendleft((min_val, -26))
    dq.appendleft((min_val, -27))
    dq.appendleft((min_val, -28))
    dq.appendleft((min_val, -29))
    dq.appendleft((min_val, -30))
    dq.appendleft((min_val, -31))
    dq.appendleft((min_val, -32))
    dq.appendleft((min_val, -33))
    dq.appendleft((min_val, -34))
    dq.appendleft((min_val, -35))
    dq.appendleft((min_val, -36))
    dq.appendleft((min_val, -37))
    dq.appendleft((min_val, -38))
    dq.appendleft((min_val, -39))
    dq.appendleft((min_val, -40))
    dq.appendleft((min_val, -41))
    dq.appendleft((min_val, -42))
    dq.appendleft((min_val, -43))
    dq.appendleft((min_val, -44))
    dq.appendleft((min_val, -45))
    dq.appendleft((min_val, -46))
    dq.appendleft((min_val, -47))
    dq.appendleft((min_val, -48))
    dq.appendleft((min_val, -49))
    dq.appendleft((min_val, -50))
    dq.appendleft((min_val, -51))
    dq.appendleft((min_val, -52))
    dq.appendleft((min_val, -53))
    dq.appendleft((min_val, -54))
    dq.appendleft((min_val, -55))
    dq.appendleft((min_val, -56))
    dq.appendleft((min_val, -57))
    dq.appendleft((min_val, -58))
    dq.appendleft((min_val, -59))
    dq.appendleft((min_val, -60))
    dq.appendleft((min_val, -61))
    dq.appendleft((min_val, -62))
    dq.appendleft((min_val, -63))
    dq.appendleft((min_val, -64))
    dq.appendleft((min_val, -65))
    dq.appendleft((min_val, -66))
    dq.appendleft((min_val, -67))
    dq.appendleft((min_val, -68))
    dq.appendleft((min_val, -69))
    dq.appendleft((min_val, -70))
    dq.appendleft((min_val, -71))
    dq.appendleft((min_val, -72))
    dq.appendleft((min_val, -73))
    dq.appendleft((min_val, -74))
    dq.appendleft((min_val, -75))
    dq.appendleft((min_val, -76))
    dq.appendleft((min_val, -77))
    dq.appendleft((min_val, -78))
    dq.appendleft((min_val, -79))
    dq.appendleft((min_val, -80))
    dq.appendleft((min_val, -81))
    dq.appendleft((min_val, -82))
    dq.appendleft((min_val, -83))
    dq.appendleft((min_val, -84))
    dq.appendleft((min_val, -85))
    dq.appendleft((min_val, -86))
    dq.appendleft((min_val, -87))
    dq.appendleft((min_val, -88))
    dq.appendleft((min_val, -89))
    dq.appendleft((min_val, -90))
    dq.appendleft((min_val, -91))
    dq.appendleft((min_val, -92))
    dq.appendleft((min_val, -93))
    dq.appendleft((min_val, -94))
    dq.appendleft((min_val, -95))
    dq.appendleft((min_val, -96))
    dq.appendleft((min_val, -97))
    dq.appendleft((min_val, -98))
    dq.appendleft((min_val, -99))
    dq.appendleft((min_val, -100))
    dq.appendleft((min_val, -101))
    dq.appendleft((min_val, -102))
    dq.appendleft((min_val, -103))
    dq.appendleft((min_val, -104))
    dq.appendleft((min_val, -105))
    dq.appendleft((min_val, -106))
    dq.appendleft((min_val, -107))
    dq.appendleft((min_val, -108))
    dq.appendleft((min_val, -109))
    dq.appendleft((min_val, -110))
    dq.appendleft((min_val, -111))
    dq.appendleft((min_val, -112))
    dq.appendleft((min_val, -113))
    dq.appendleft((min_val, -114))
    dq.appendleft((min_val, -115))
    dq.appendleft((min_val, -116))
    dq.appendleft((min_val, -117))
    dq.appendleft((min_val, -118))
    dq.appendleft((min_val, -119))
    dq.appendleft((min_val, -120))
    dq.appendleft((min_val, -121))
    dq.appendleft((min_val, -122))
    dq.appendleft((min_val, -123))
    dq.appendleft((min_val, -124))
    dq.appendleft((min_val, -125))
    dq.appendleft((min_val, -126))
    dq.appendleft((min_val, -127))
    dq.appendleft((min_val, -128))
    dq.appendleft((min_val, -129))
    dq.appendleft((min_val, -130))
    dq.appendleft((min_val, -131))
    dq.appendleft((min_val, -132))
    dq.appendleft((min_val, -133))
    dq.appendleft((min_val, -134))
    dq.appendleft((min_val, -135))
    dq.appendleft((min_val, -136))
    dq.appendleft((min_val, -137))
    dq.appendleft((min_val, -138))
    dq.appendleft((min_val, -139))
    dq.appendleft((min_val, -140))
    dq.appendleft((min_val, -141))
    dq.appendleft((min_val, -142))
    dq.appendleft((min_val, -143))
    dq.appendleft((min_val, -144))
    dq.appendleft((min_val, -145))
    dq.appendleft((min_val, -146))
    dq.appendleft((min_val, -147))
    dq.appendleft((min_val, -148))
    dq.appendleft((min_val, -149))
    dq.appendleft((min_val, -150))
    dq.appendleft((min_val, -151))
    dq.appendleft((min_val, -152))
    dq.appendleft((min_val, -153))
    dq.appendleft((min_val, -154))
    dq.appendleft((min_val, -155))
    dq.appendleft((min_val, -156))
    dq.appendleft((min_val, -157))
    dq.appendleft((min_val, -158))
    dq.appendleft((min_val, -159))
    dq.appendleft((min_val, -160))
    dq.appendleft((min_val, -161))
    dq.appendleft((min_val, -162))
    dq.appendleft((min_val, -163))
    dq.appendleft((min_val, -164))
    dq.appendleft((min_val, -165))
    dq.appendleft((min_val, -166))
    dq.appendleft((min_val, -167))
    dq.appendleft((min_val, -168))
    dq.appendleft((min_val, -169))
    dq.appendleft((min_val, -170))
    dq.appendleft((min_val, -171))
    dq.appendleft((min_val, -172))
    dq.appendleft((min_val, -173))
    dq.appendleft((min_val, -174))
    dq.appendleft((min_val, -175))
   
