```python
from collections import deque

def find_route(n, stamps):
    graph = {}
    for s, e in stamps:
        if s not in graph:
            graph[s] = []
        if e not in graph:
            graph[e] = []
        graph[s].append(e)
        graph[e].append(s)

    visited = set()
    queue = deque()
    queue.append(1)

    while queue:
        city = queue.popleft()
        if city not in visited:
            visited.add(city)
            for neighbor in graph[city]:
                if neighbor not in visited:
                    if len(graph) == len(visited) + 1:
                        return list(visited) + [neighbor]
                    queue.append(neighbor)

    return None

n = int(input())
stamps = []
for _ in range(n):
    s, e = map(int, input().split())
    stamps.append((s, e))

route = find_route(n, stamps)
if route is not None:
    print(*route)
else:
    print(-1)
```
