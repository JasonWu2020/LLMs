[/INST] ```python
import sys, functools, itertools

input = iter(sys.stdin.buffer.readline.split)

@functools.lru_cache(maxsize=None)
def dp(i, a, b):
 if i == 0: return 0
 if i not in a or i in b: return dp(i - 1, a, b)
 return dp(i - 1, a, b) + (b[i] - a[i])

for _ in range(int(next(input()))):
 n, k = map(int, next(input()))
 a, b = list(map(list, zip(*[iter(input) for _ in range(2)])))
 alice_items = list(filter(lambda x: dp(x, a, b) > dp(x - 1, a, b), range(1, n + 1)))
 alice_profit = sum(b[i] for i in alice_items) - sum(a[i] for i in set(dp(i, a, b).bit_index(dp(i, a, b)[0]) for i in range(1, n + 1) if dp(i, a, b)[0] & (1 << i)))
 print(alice_profit)
```</s>
