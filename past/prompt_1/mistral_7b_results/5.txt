[/INST] ```python
def cyclic_shift_cost(s, l, r): return r - l + 1

def binary_string_to_list(s): return list(map(int, list(s)))

def sort_binary_string(s):
 l = len(s)
 if l <= 1: return 0

 s = binary_string_to_list(s)

 result = 0
 while True:
  min_subseq = (float('inf'), -1, -1)
  for i in range(l):
   subseq_l, subseq_r = i, i+1
   while subseq_r < l and s[subseq_r] == s[subseq_r+1]: subseq_r += 1
   cost = cyclic_shift_cost(s, i, subseq_r)
   if cost < min_subseq[0]: min_subseq = (cost, i, subseq_r)

  if min_subseq[0] <= result: break
  s[min_subseq[1]:min_subseq[2]] = s[min_subseq[1]:min_subseq[2]][::-1]
  result += min_subseq[0]
  for i in range(l): s[i] ^= s[min_subseq[1]+i-i]

 return result

if __name__ == '__main__':
 import sys, io
 input = sys.stdin.buffer if sys.stdout.buffer else io.BytesIO
 t = int(input().readline().strip().decode())
 for _ in range(t):
  s = input().readline().strip().decode()
  print(sort_binary_string(s))
```</s>
