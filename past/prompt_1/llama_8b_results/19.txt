```python
n = int(input())
graph = [[] for _ in range(n+1)]
for _ in range(n-1):
    u, v = map(int, input().split())
    graph[u].append(v)
    graph[v].append(u)

leaves = [int(x) for x in input().split()]

def dfs(node, parent):
    global ans
    cnt = 0
    for child in graph[node]:
        if child!= parent:
            if len(graph[child]) == 1:
                cnt += 1
            dfs(child, node)
    if cnt > 1:
        ans += node +'' * (2 * cnt - 1)
        for child in graph[node]:
            if child!= parent:
                if len(graph[child]) == 1:
                    ans +='' + str(child)
                    ans +='' + str(node)
                else:
                    ans +='' + str(child)
                    ans +='' + str(node)
        ans +='' + str(node)

ans = ''
dfs(1, -1)
if len(leaves)!= len(graph[1]) - 1:
    print(-1)
else:
    for leaf in leaves:
        ans +='' + str(leaf)
    ans = ans.strip()
    print(ans)
```
