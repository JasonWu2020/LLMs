```python
def find_route(n):
    # Assuming n is already read from stdin
    # Read n pairs of city indices
    city_pairs = [tuple(map(int, input().split())) for _ in range(n)]
    
    # Initialize variables to keep track of the current route
    current_route = [city_pairs[0][0], city_pairs[0][1]]
    next_city = city_pairs[0][1] if city_pairs[0][0] < city_pairs[0][1] else city_pairs[0][0]
    
    for i in range(1, n):
        if next_city == city_pairs[i][0]:
            current_route.append(city_pairs[i][1])
            next_city = city_pairs[i][1]
        elif next_city == city_pairs[i][1]:
            current_route.append(city_pairs[i][0])
            next_city = city_pairs[i][0]
        else:
            raise ValueError("Invalid stamp sequence")
    
    # Ensure the last city is added if necessary
    if len(current_route) < n + 1:
        current_route.append(next_city)
    
    print(' '.join(map(str, current_route)))

if __name__ == "__main__":
    n = int(input())
    find_route(n)
```
