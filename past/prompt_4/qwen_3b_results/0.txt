```python
def longest_good_subsequence(n, k, s):
    char_count = [0] * k
    for char in s:
        char_count[ord(char) - ord('A')] += 1
    
    target_count = char_count[0]
    if all(count == target_count for count in char_count):
        return n
    
    max_length = 0
    current_length = 0
    for char in s:
        if char_count[ord(char) - ord('A')] == target_count:
            current_length += 1
            max_length = max(max_length, current_length)
        else:
            current_length = 0
    return max_length

# Reading input
import sys
input = sys.stdin.read
data = input().split()
n, k = map(int, data[0].split())
s = data[1]

# Printing the result
print(longest_good_subsequence(n, k, s))
```
