```python
import sys

def min_password_length(n, password):
    """
    This function calculates the minimum length of the password after applying the given operations.

    Args:
        n (int): The length of the password.
        password (list): A list of integers representing the password.

    Returns:
        int: The minimum length of the password after applying the operations.
    """
    # Initialize a variable to store the count of consecutive elements
    count = 1

    # Iterate through the password from the second element to the end
    for i in range(1, n):
        # If the current element is different from the previous one, increment the count
        if password[i]!= password[i - 1]:
            count += 1

    # The minimum length of the password is the count of unique elements
    return count

# Read the number of test cases
test_cases = int(input())

# Process each test case
for _ in range(test_cases):
    # Read the length of the password
    n = int(input())

    # Read the password
    password = list(map(int, input().split()))

    # Calculate and print the minimum length of the password
    print(min_password_length(n, password))
```

This Python code defines a function `min_password_length` that calculates the minimum length of the password after applying the given operations. It then reads the number of test cases, processes each test case by reading the password length and the password itself, and prints the minimum length of the password for each test case.

To use this code, simply copy and paste it into a Python environment and run it. The code will read the input from the console and print the output for each test case.

Example usage:

```
3
5
7 4 3 7 2
4
1 1 1 1
3
1 2 3
```

Output:

```
1
4
3
```

Note that this code assumes that the input is well-formed and does not contain any errors. If the input may be invalid, you should add error handling code to handle such cases.
