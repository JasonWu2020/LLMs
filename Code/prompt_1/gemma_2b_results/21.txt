<start_of_turn>model
```python
def min_pockets(n, a):
  dp = [[float('inf')] * (n + 1) for _ in range(n + 1)] 
  dp[0][0] = 0
  for i in range(1, n + 1):
    for j in range(i + 1):
      if a[i - 1] != a[i - 2]:
        dp[i][j] = min(dp[i][j], dp[i - 1][j - 1] + 1)
      
  return dp[n][n]

t = int(input())
for _ in range(t):
  n = int(input())
  a = list(map(int, input().split())) 
  print(min_pockets(n, a)) 
```<end_of_turn>
