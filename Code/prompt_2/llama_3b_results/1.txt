```python
from collections import deque

def min_invitations(n, p):
    graph = [[] for _ in range(n+1)]
    for i in range(n):
        graph[p[i]].append(i+1)
    visited = set()
    queue = deque()
    queue.append(1)
    visited.add(1)
    count = 0
    while queue:
        node = queue.popleft()
        for neighbor in graph[node]:
            if neighbor not in visited:
                visited.add(neighbor)
                queue.append(neighbor)
                count += 1
                if len(visited) >= 2:
                    break
    return count

t = int(input())
for _ in range(t):
    n = int(input())
    p = list(map(int, input().split()))
    print(min_invitations(n, p))
```
