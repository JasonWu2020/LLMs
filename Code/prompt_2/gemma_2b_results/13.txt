<start_of_turn>model
```python
def shortest_password(n, a):
    dp = [float('inf')] * (n + 1)
    dp[0] = 0
    for i in range(1, n + 1):
        if i > 1:
            dp[i] = min(dp[i], dp[i-1]) + 1
    return dp[n]
    
t = int(input())

for _ in range(t):
    n = int(input())
    a = list(map(int, input().split()))

    print(shortest_password(n, a))
```<end_of_turn>
