```python
from collections import Counter

def longest_good_subsequence(n, k, s):
    freq = [0] * k
    result = 0
    left = 0
    
    for right, char in enumerate(s):
        index = ord(char) - ord('A')
        freq[index] += 1
        
        while min(freq) > 0:
            freq[ord(s[left]) - ord('A')] -= 1
            left += 1
        
        result = max(result, right - left + 1)
    
    return result

# Reading input from stdin
n, k = map(int, input().split())
s = input()

# Printing solution to stdout
print(longest_good_subsequence(n, k, s))
```
