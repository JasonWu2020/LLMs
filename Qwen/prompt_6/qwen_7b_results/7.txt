```python
def generate_smallest_permutation(S, T):
    # Sort S based on the order of a, b, c in T to make it lexicographically smallest
    sorted_S = ''.join(sorted(S, key=lambda x: T.index(x) if x in T else float('inf')))
    
    # Remove characters not in T to ensure T is not a subsequence
    filtered_S = ''.join(filter(lambda x: x in T, sorted_S))
    
    # Append characters in T order if not already in S'
    for char in T:
        if char not in filtered_S:
            filtered_S += char
    
    return filtered_S


if __name__ == "__main__":
    import sys
    t = int(sys.stdin.readline().strip())
    
    for _ in range(t):
        S = sys.stdin.readline().strip()
        T = sys.stdin.readline().strip()
        
        result = generate_smallest_permutation(S, T)
        print(result)
```
