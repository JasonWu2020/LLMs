```python
import sys

def find_cycle(graph):
    visited = [False] * (len(graph) + 1)
    for i in range(1, len(graph) + 1):
        if not visited[i]:
            if dfs(graph, i, visited):
                return True
    return False

def dfs(graph, node, visited):
    visited[node] = True
    for i in range(1, len(graph) + 1):
        if graph[node - 1] == i:
            if visited[i]:
                return True
            dfs(graph, i, visited)
    return False

t = int(input())
for _ in range(t):
    n = int(input())
    p = list(map(int, input().split()))
    if find_cycle(p):
        print(2)
    else:
        print(3)
```
