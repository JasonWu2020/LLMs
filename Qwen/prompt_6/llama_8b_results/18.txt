```python
import sys

def find_common_subsequence(a, b):
    # Convert the lists to sets for efficient lookups
    set_b = set(b)
    # Initialize the result list
    result = []
    # Initialize the pointers
    i, j = 0, 0
    # Iterate over the elements in the first array
    while i < len(a) and j < len(b):
        # If the current elements are equal, add the element to the result and move both pointers forward
        if a[i] == b[j]:
            result.append(a[i])
            i += 1
            j += 1
        # If the current element in the first array is smaller, move the pointer for the first array forward
        elif a[i] < b[j]:
            i += 1
        # If the current element in the second array is smaller, move the pointer for the second array forward
        else:
            j += 1
    # If we have reached the end of either array, it means we have found a subsequence of both arrays
    if i == len(a) or j == len(b):
        return result
    else:
        return []

def solve():
    # Read the input
    n, m = map(int, input().split())
    a = list(map(int, input().split()))
    b = list(map(int, input().split()))
    # Find the common subsequence
    common = find_common_subsequence(a, b)
    # If a common subsequence exists, output it
    if common:
        print("YES")
        print(len(common))
        print(*common)
    else:
        print("NO")

# Read the number of test cases
t = int(input())
# Run the test cases
for _ in range(t):
    solve()
```

You can save this code to a file (e.g., `solution.py`) and run it using `python solution.py` in your terminal. This will read the input from the standard input and print the output to the standard output, which will be sent to the server to be RUN AS CODE.
