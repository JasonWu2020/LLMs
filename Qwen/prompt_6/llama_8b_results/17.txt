```python
def min_moves(n, original, target):
    dp = [[[float('inf')] * 10 for _ in range(n)] for _ in range(n)]
    for i in range(n):
        dp[i][int(original[i])][i] = 0

    for i in range(1, n):
        for j in range(10):
            for k in range(10):
                if j == k:
                    dp[i][j][k] = dp[i-1][j][k]
                elif (j + 1) % 10 == k or (j - 1) % 10 == k:
                    dp[i][j][k] = min(dp[i-1][j][k] + 1, dp[i][j][k])
                else:
                    dp[i][j][k] = min(dp[i-1][j][k] + min(abs(j-k), 10-abs(j-k)), dp[i][j][k])

    ans = float('inf')
    for j in range(10):
        ans = min(ans, dp[n-1][j][int(target[-1])])

    return ans

n = int(input())
original = input()
target = input()

print(min_moves(n, original, target))
```
