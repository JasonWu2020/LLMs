```python
import sys

def max_stones(a, b, c):
    # If all heaps have less than 2 stones, she cannot perform any operations
    if a < 2 or b < 2 or c < 2:
        return 0
    
    # She can always take 4 stones from the second heap and 6 stones from the third heap,
    # which gives her 9 stones initially.
    if a >= 4 and b >= 2 and c >= 2:
        return 9
    
    # In other cases, she can try to maximize the sum of stones taken from the heaps.
    # For example, if a > 2, she can take 2 stones from the first heap and 4 stones from the second heap,
    # then repeat until the first heap becomes empty.
    if a > 2:
        while a > 2:
            a -= 2
            b += 2
            c += 2
        return min(b + c, 9)
    
    # Similarly, for the second heap, if b > 2, she can take 2 stones from the second heap and 4 stones from the third heap.
    if b > 2:
        while b > 2:
            b -= 2
            c += 2
        return min(c + a, 9)
    
    # If neither a nor b are greater than 2, she can take one stone from each heap repeatedly until they become zero.
    return a + b + c - 3

if __name__ == "__main__":
    t = int(input())
    results = []
    
    for _ in range(t):
        a, b, c = map(int, input().split())
        result = max_stones(a, b, c)
        results.append(result)
    
    for res in results:
        print(res)
```
This Python script reads the number of test cases `t` followed by `t` lines containing three non-negative integers `a`, `b`, and `c`. It calculates the maximum number of stones Alice can take using the provided logic and prints the results for each test case.
