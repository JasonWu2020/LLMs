Here is the updated solution in Python 3.8:

```python
def most_exercised_muscle(n, exercises):
    """
    Determine which muscle gets the most exercises.

    Args:
        n (int): The number of exercises.
        exercises (list): A list of integers representing the number of times each exercise is done.

    Returns:
        str: The muscle that gets the most exercises.
    """

    # Initialize a dictionary to store the total count of each muscle
    muscle_counts = {}

    # Iterate over the exercises and update the muscle counts
    for i, count in enumerate(exercises):
        if i == 0:  # Chest
            muscle_counts['chest'] = count
        elif i == 1:  # Biceps
            muscle_counts['biceps'] = count
        else:  # Back
            muscle_counts['back'] = count

    # Find the muscle with the maximum count
    most_exercised = max(muscle_counts, key=muscle_counts.get)

    # Check if the count of the most exercised muscle is equal to the total number of exercises
    if muscle_counts[most_exercised] == n:
        return most_exercised
    elif muscle_counts['chest'] == n:
        return 'chest'
    elif muscle_counts['biceps'] == n:
        return 'biceps'
    else:
        return 'back'

# Read the number of exercises and the exercise counts
n = int(input())
exercises = list(map(int, input().split()))

# Print the most exercised muscle
print(most_exercised_muscle(n, exercises))
```

This code defines a function `most_exercised_muscle` that takes the number of exercises and the exercise counts as input and returns the muscle that gets the most exercises. It uses a dictionary to store the total count of each muscle and finds the muscle with the maximum count using the `max` function with the `key` argument set to `muscle_counts.get`. The `max` function is used to find the maximum value in the dictionary. The code also checks if the count of the most exercised muscle is equal to the total number of exercises, and returns the corresponding muscle if it is.
