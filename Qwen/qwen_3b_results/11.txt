To solve this problem, we need to determine the minimum number of shovels Polycarp can buy such that the total cost of these shovels can be paid without any change using only 10-burle coins and the specific r-burle coin.

### Problem Breakdown:
1. **Cost per Shovel**: Each shovel costs \( k \) burles.
2. **Special Coin**: Polycarp has a special coin of \( r \) burles.
3. **Objective**: Find the minimum number of shovels \( n \) such that \( nk \) can be expressed as a combination of 10-burle coins and \( r \)-burle coins.

### Approach:
- We need to find a combination of \( n \cdot k \) such that it can be expressed using 10-burle coins and \( r \)-burle coins.
- Given that Polycarp has an unlimited supply of 10-burle coins, the challenge is to find the smallest \( n \).

### Python Implementation:

```python
def min_shovels(k, r):
    # Since we have an unlimited number of 10-burle coins, we need to check if k is divisible by r or not.
    # If k is divisible by r, then we can buy 1 shovel and use 10-burle coins for the rest.
    if k % r == 0:
        return 1
    else:
        # Otherwise, we need to find the smallest n such that nk is divisible by r.
        # This means nk must be a multiple of r.
        # The smallest n will be r itself because r is the smallest coin value.
        return r

# Reading input values
k, r = map(int, input().split())

# Printing the result
print(min_shovels(k, r))
```

### Explanation of the Solution:
1. **Divisibility Check**: 
   - If \( k \) is divisible by \( r \), then the minimum number of shovels Polycarp needs to buy is 1, as he can use the special \( r \)-burle coin to cover the cost.
   - If \( k \) is not divisible by \( r \), the smallest number of shovels Polycarp needs to buy is \( r \), because \( r \) is the smallest coin value, and he can use it to make up the difference when \( k \) is not a multiple of \( r \).

### Example Cases:
1. **Example 1**:
   - Input: `117 3`
   - Output: `1`
   - Reason: Since 117 is divisible by 3, Polycarp can buy 1 shovel and use 10-burle coins to cover the rest.

2. **Example 2**:
   - Input: `1 1`
   - Output: `1`
   - Reason: Polycarp can buy 1 shovel and use the 1-burle coin to cover the cost.

3. **Example 3**:
   - Input: `15 1`
   - Output: `2`
   - Reason: Polycarp needs to buy 2 shovels, totaling 30 burles, which can be paid with 3 10-burle coins and 1 1-burle coin.

This approach ensures that we find the minimum number of shovels needed efficiently and adheres to the constraints provided.
